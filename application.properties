# port
server.port=8088
# database
spring.data.mongodb.uri=mongodb://root:example@localhost:27017/flight_booking?authSource=admin

# producer
spring.kafka.main.producer.bootstrap-servers=localhost:9092
spring.kafka.main.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.main.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

# consumer
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.group-id=payment-details-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.specific.avro.reader=true

spring.kafka.properties.schema.registry.url=http://localhost:8081

## TODO: create Consumer Factories for multiple groups of consumers! Needed for admin service
